











































#TODO Create a function that takes a turtle as its parameter and gives that turtle (apple)
# a new location on the tree, only if the list of letters is not empty. Associate the 
# turtle with a new letter selected at random from the list of letters

#TODO Create a function that takes a turtle (apple) and its corresponding letter from the letter
# list and draws that letter on that turtle (apple)

#TODO Create a function that takes a turtle (apple) and its corresponding ltter from the letter
# list and set that turtle to be shaped by the image file, call the letter drawing function,
# and update the Screen

#TODO Iterate over the numbers from 0 to the number of apples, creating that many turtles
# calling your function that resets the apples by giving them a new random location
# add the new apples to a list of apples to be used in the rest of the program.
# The loop below executes the correct number of times by using the range() function
# to create a list of numbers to iterate over.
#for i in range(0, number_of_apples):
  #Your code here

#TODO Create a function that takes a letter as its parameter, uses that letter to retrieve the
# corresponding turtle (apple) and causes both to drop from the tree simultaneously. Once the 
# apple and letter have dropped, call the apple reseting function.

#TODO define a function per letter that you will use in your program. Each function should check
# to see if the given letter is in the list of letters; if it is, it should drop the corresponding
# apple.

#TODO use the onkeypress method of wn to correlate the functions you defined above with each
# of the letters that the user might type.
# onkeypress requires that you name one function that must take
# no arguments to be called when the specified key is pressed.

#wn.listen()
#trtl.mainloop()


##!/usr/bin/env python3
#from random import randint
#import turtle as trtl
#import random as rand
#from turtle import update
#
## -----setup-----
#apple_image = "apple.gif"  # Store the file name of your shape
#pear_image = "pear.gif"  # Store the file name of your shape
#ground = -120
#keys = ["A", "S", "D", "F", "G", "H", "J", "K", "L"]
#
#wn = trtl.Screen()
#wn.setup(width=1.0, height=1.0)
#wn.addshape(apple_image)  # Make the screen aware of the new file
#wn.addshape(pear_image)  # Make the screen aware of the new file
#wn.bgpic("background.gif")
#
#apples, letters = [], []
#for _ in range(9):
#    t = trtl.Turtle()
#    t.penup()
#    apples.append(t)
#    l = trtl.Turtle()
#    l.penup()
#    letters.append(l)
#
## -----functions-----
## given a turtle, set that turtle to be shaped by the image file
#def draw_apple(active_apple):
#    active_apple.shape(apple_image if rand.randint(0,100) % 2 == 0 else pear_image)
#    active_apple.goto(rand.randint(-200,200), rand.randint(-25,100))
#    wn.update()
#
#def draw_letter(active_apple, active_letter):
#    key = keys.pop(len(keys)-1)
#    update_letter(active_apple, active_letter)
#    active_letter.color("white")
#    active_letter.write(key, font=("Arial", 25, "bold"))
#    active_letter.hideturtle()
#    return key
#
#def update_letter(active_apple, active_letter):
#    active_letter.goto(active_apple.xcor() - 12, active_apple.ycor() - 30)
#
#def fall(active_apple, active_letter):
#    while active_apple.ycor() != ground:
#        active_apple.sety(active_apple.ycor()-1)
#        update_letter(active_apple, active_letter)
#
## -----function calls-----
#for apple, letter in zip(apples, letters):
#    draw_apple(apple)
#    key = draw_letter(apple, letter)
#    wn.onkeypress(lambda: fall(apple, letter), key.lower())
#
#wn.listen()
#wn.mainloop()
#